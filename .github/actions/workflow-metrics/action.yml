name: 'Workflow Metrics Generator'
description: 'Generate detailed metrics for GitHub Actions workflows'
author: 'Your Name'

inputs:
  workflow-path:
    description: 'Path to the workflow YAML file to analyze'
    required: false
    default: '.github/workflows/ci.yml'
  output-format:
    description: 'Output format: json, csv, or both'
    required: false
    default: 'both'
  upload-artifacts:
    description: 'Whether to upload generated files as artifacts'
    required: false
    default: 'true'

outputs:
  json-file:
    description: 'Path to generated JSON metrics file'
    value: ${{ steps.generate.outputs.json-file }}
  csv-file:
    description: 'Path to generated CSV metrics file'  
    value: ${{ steps.generate.outputs.csv-file }}
  metrics-summary:
    description: 'Brief metrics summary'
    value: ${{ steps.generate.outputs.summary }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML
        
    - name: Create metrics generator
      shell: bash
      run: |
        cat > ${{ github.action_path }}/metrics_generator.py << 'EOF'
        # Insert your complete workflow metrics script here
        
        EOF
        
    - name: Generate metrics
      id: generate
      shell: bash
      run: |
        cd ${{ github.action_path }}
        
        python -c "
        import sys
        sys.path.append('.')
        from metrics_generator import WorkflowMetricsGenerator
        import os
        
        workflow_path = '${{ inputs.workflow-path }}'
        output_format = '${{ inputs.output-format }}'
        
        print(f'🚀 Analyzing workflow: {workflow_path}')
        
        try:
            generator = WorkflowMetricsGenerator(workflow_yaml_path=workflow_path)
            metrics = generator.generate_all_metrics()
            
            # Print summary
            generator.print_metrics_summary(metrics)
            
            json_file = ''
            csv_file = ''
            
            # Export files
            if output_format in ['json', 'both']:
                json_file = generator.export_to_json(metrics, detailed=True)
                print(f'✅ Generated JSON: {json_file}')
                
            if output_format in ['csv', 'both']:
                csv_file = generator.export_to_csv(metrics, include_steps=True)
                print(f'✅ Generated CSV: {csv_file}')
            
            # Set outputs
            print(f'::set-output name=json-file::{json_file}')
            print(f'::set-output name=csv-file::{csv_file}')
            print(f'::set-output name=summary::Generated metrics for {len(metrics)} jobs')
            
        except Exception as e:
            print(f'❌ Error: {str(e)}')
            sys.exit(1)
        "
        
    - name: Upload artifacts
      if: inputs.upload-artifacts == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: workflow-metrics
        path: |
          ${{ steps.generate.outputs.json-file }}
          ${{ steps.generate.outputs.csv-file }}
        retention-days: 30

