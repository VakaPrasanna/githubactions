name: CI Pipeline
'on':
  push:
    branches:
    - master
    - main
    - develop
  pull_request:
    branches:
    - master
    - main
    - develop
env:
  REGISTRY: ghcr.io/company
  APP_NAME: multi-stage-app
  BUILD_ARGS: --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
permissions:
  contents: read
  actions: read
  security-events: write
  deployments: write
  checks: write
jobs:
  build-base-image:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Build Base Image
      uses: ./.github/actions/build-base-image
      with:
        image-name: ${{ github.repository }}
        build-tag: ${{ github.sha }}
        registry: docker.io
      timeout-minutes: 30
  build-development-image:
    runs-on: ubuntu-latest
    needs: build-base-image
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Build Development Image
      uses: ./.github/actions/build-development-image
      with:
        image-name: ${{ github.repository }}
        build-tag: ${{ github.sha }}
        registry: docker.io
      timeout-minutes: 30
  run-tests-in-container:
    runs-on: ubuntu-latest
    needs: build-development-image
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Run Tests in Container
      uses: ./.github/actions/run-tests-in-container
  build-production-image:
    runs-on: ubuntu-latest
    needs: run-tests-in-container
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Build Production Image
      uses: ./.github/actions/build-production-image
      with:
        image-name: ${{ github.repository }}
        build-tag: ${{ github.sha }}
        registry: docker.io
      timeout-minutes: 30
  security-scan:
    runs-on: ubuntu-latest
    needs: build-production-image
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Security Scan
      uses: ./.github/actions/security-scan
  pipeline-post:
    name: Pipeline Post Actions
    runs-on: ubuntu-latest
    needs:
    - build-base-image
    - build-development-image
    - run-tests-in-container
    - build-production-image
    - security-scan
    if: always()
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Publish test results (always)
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Pipeline Test Results (always)
        path: test-results/junit.xml
        reporter: java-junit
      continue-on-error: false
