name: CI Pipeline
'on':
  push:
    branches:
    - master
    - main
    - develop
  pull_request:
    branches:
    - master
    - main
    - develop
  workflow_dispatch:
    inputs:
      LATEST_TAG:
        description: Tag as latest?
        required: false
        default: true
        type: boolean
      REGISTRY_TYPE:
        description: Registry type
        required: false
        default: docker-hub
        type: choice
        options:
        - docker-hub
        - ecr
        - gcr
        - acr
env:
  DOCKER_REGISTRY: registry.company.com
  DOCKER_REPO: myteam/myapp
permissions:
  contents: read
  actions: read
  security-events: write
  deployments: write
  checks: write
jobs:
  login-to-registry:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Login to Registry
      uses: ./.github/actions/login-to-registry
      with:
        docker-username: ${{ secrets.DOCKER_USERNAME }}
        docker-password: ${{ secrets.DOCKER_PASSWORD }}
        registry-cred-username: ${{ secrets.REGISTRY_CRED_USERNAME }}
        registry-cred-password: ${{ secrets.REGISTRY_CRED_PASSWORD }}
        image-name: ${{ github.repository }}
        build-tag: ${{ github.sha }}
        registry: docker.io
      timeout-minutes: 30
  build-and-tag:
    runs-on: ubuntu-latest
    needs: login-to-registry
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Build and Tag
      uses: ./.github/actions/build-and-tag
    continue-on-error: true
  push-images:
    runs-on: ubuntu-latest
    needs: build-and-tag
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Push Images
      uses: ./.github/actions/push-images
    continue-on-error: true
  verify-push:
    runs-on: ubuntu-latest
    needs: push-images
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Verify Push
      uses: ./.github/actions/verify-push
  pipeline-post:
    name: Pipeline Post Actions
    runs-on: ubuntu-latest
    needs:
    - login-to-registry
    - build-and-tag
    - push-images
    - verify-push
    if: always()
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Pipeline post always
      if: always()
      run: docker logout ${DOCKER_REGISTRY}
      shell: bash
