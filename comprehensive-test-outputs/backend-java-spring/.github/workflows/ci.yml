name: CI Pipeline
'on':
  push:
    branches:
    - master
    - main
    - develop
  pull_request:
    branches:
    - master
    - main
    - develop
  workflow_dispatch:
    inputs:
      SKIP_INTEGRATION_TESTS:
        description: Skip integration tests
        required: false
        default: false
        type: boolean
      PROFILE:
        description: Spring profile
        required: false
        default: dev
        type: choice
        options:
        - dev
        - test
        - prod
env:
  SPRING_PROFILES_ACTIVE: test
  MAVEN_OPTS: -Xmx1024m
permissions:
  contents: read
  actions: read
  security-events: write
  deployments: write
  checks: write
jobs:
  compile:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Compile
      uses: ./.github/actions/compile
  unit-tests:
    runs-on: ubuntu-latest
    needs: compile
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Unit Tests
      uses: ./.github/actions/unit-tests
    continue-on-error: true
  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Integration Tests
      uses: ./.github/actions/integration-tests
  sonarqube-analysis:
    runs-on: ubuntu-latest
    needs: integration-tests
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Run SonarQube Analysis
      uses: ./.github/actions/sonarqube-analysis
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        sonar-host-url: ${{ secrets.SONAR_HOST_URL }}
  quality-gate:
    runs-on: ubuntu-latest
    needs: sonarqube-analysis
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Quality Gate
      uses: ./.github/actions/quality-gate
    continue-on-error: true
  package:
    runs-on: ubuntu-latest
    needs: quality-gate
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Package
      uses: ./.github/actions/package
  docker-build:
    runs-on: ubuntu-latest
    needs: package
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Docker Build
      uses: ./.github/actions/docker-build
  pipeline-post:
    name: Pipeline Post Actions
    runs-on: ubuntu-latest
    needs:
    - compile
    - unit-tests
    - integration-tests
    - sonarqube-analysis
    - quality-gate
    - package
    - docker-build
    if: always()
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Publish test results (always)
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Pipeline Test Results (always)
        path: target/surefire-reports/*.xml
        reporter: java-junit
      continue-on-error: false
    - name: Publish HTML (always) - MANUAL CONVERSION REQUIRED
      if: always()
      run: "\n# MANUAL CONVERSION REQUIRED: PublishHTML Plugin\n# Original Jenkins feature: publishHTML([\n                        allowMissing: false,\n                        alwaysLinkToLastBuild: true,\n                        keepAll: true,\n                        reportDir: 'target/site/jacoco',\n                        reportFiles: 'index.html',\n                        reportName: 'Code Coverage'\n                    ])\n# Action needed: Review Jenkins documentation and implement equivalent logic\n# TODO: Implement this functionality manually\n"
      shell: bash
