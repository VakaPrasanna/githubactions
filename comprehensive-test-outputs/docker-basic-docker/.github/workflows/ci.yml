name: CI Pipeline
'on':
  push:
    branches:
    - master
    - main
    - develop
  pull_request:
    branches:
    - master
    - main
    - develop
  workflow_dispatch:
    inputs:
      TAG:
        description: Docker image tag
        required: false
        default: latest
        type: string
      PUSH_IMAGE:
        description: Push to registry?
        required: false
        default: true
        type: boolean
env:
  DOCKER_REGISTRY: docker.io
  IMAGE_NAME: myapp
permissions:
  contents: read
  actions: read
  security-events: write
  deployments: write
  checks: write
jobs:
  checkout:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Checkout
      uses: ./.github/actions/checkout
  build-docker-image:
    runs-on: ubuntu-latest
    needs: checkout
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Build Docker Image
      uses: ./.github/actions/build-docker-image
    continue-on-error: true
  test-image:
    runs-on: ubuntu-latest
    needs: build-docker-image
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Test Image
      uses: ./.github/actions/test-image
  push-to-registry:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && params.PUSH_IMAGE
    needs: test-image
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Push to Registry
      uses: ./.github/actions/push-to-registry
  pipeline-post:
    name: Pipeline Post Actions
    runs-on: ubuntu-latest
    needs:
    - checkout
    - build-docker-image
    - test-image
    - push-to-registry
    if: always()
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Pipeline post always
      if: always()
      run: docker system prune -f
      shell: bash
