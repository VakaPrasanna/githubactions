name: CI Pipeline
'on':
  push:
    branches:
    - master
    - main
    - develop
  pull_request:
    branches:
    - master
    - main
    - develop
  workflow_dispatch:
    inputs:
      REPLICAS:
        description: Number of replicas
        required: false
        default: '3'
        type: string
      STRATEGY:
        description: Deployment strategy
        required: false
        default: RollingUpdate
        type: choice
        options:
        - RollingUpdate
        - Recreate
env:
  DOCKER_IMAGE: myapp
  NAMESPACE: default
permissions:
  contents: read
  actions: read
  security-events: write
  deployments: write
  checks: write
jobs:
  apply-configmaps:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Apply ConfigMaps
      uses: ./.github/actions/apply-configmaps
      timeout-minutes: 30
  deploy-application:
    runs-on: ubuntu-latest
    needs: apply-configmaps
    timeout-minutes: 60
    concurrency:
      group: deployment-deploy-application
      cancel-in-progress: false
    steps:
    - uses: actions/checkout@v4
    - name: Run Deploy Application
      uses: ./.github/actions/deploy-application
      timeout-minutes: 30
  verify-deployment:
    runs-on: ubuntu-latest
    needs: deploy-application
    timeout-minutes: 60
    concurrency:
      group: deployment-verify-deployment
      cancel-in-progress: false
    steps:
    - uses: actions/checkout@v4
    - name: Run Verify Deployment
      uses: ./.github/actions/verify-deployment
      timeout-minutes: 30
  update-ingress:
    runs-on: ubuntu-latest
    needs: verify-deployment
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Update Ingress
      uses: ./.github/actions/update-ingress
      timeout-minutes: 30
  pipeline-post:
    name: Pipeline Post Actions
    runs-on: ubuntu-latest
    needs:
    - apply-configmaps
    - deploy-application
    - verify-deployment
    - update-ingress
    if: always()
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Pipeline post failure
      if: failure()
      run: echo "Deployment failed, rolling back..."
      shell: bash
    - name: Pipeline post failure
      if: failure()
      run: kubectl rollout undo deployment/myapp -n ${NAMESPACE}
      shell: bash
    - name: Pipeline post failure
      if: failure()
      run: kubectl rollout status deployment/myapp -n ${NAMESPACE}
      shell: bash
    - name: Pipeline post failure
      if: failure()
      run: echo Deployment failed, rolling back...
      shell: bash
