name: CI Pipeline
'on':
  push:
    branches:
    - master
    - main
    - develop
  pull_request:
    branches:
    - master
    - main
    - develop
  workflow_dispatch:
    inputs:
      DEPLOY_BRANCH:
        description: Branch to deploy
        required: false
        default: main
        type: string
      RUN_E2E_TESTS:
        description: Run end-to-end tests
        required: false
        default: false
        type: boolean
      NODE_VERSION:
        description: Node.js version
        required: false
        default: '16'
        type: choice
        options:
        - '16'
        - '18'
        - '20'
env:
  NODE_ENV: test
  NPM_CONFIG_CACHE: /tmp/.npm
  CYPRESS_CACHE_FOLDER: /tmp/.cache/Cypress
permissions:
  contents: read
  actions: read
  security-events: write
  deployments: write
  checks: write
jobs:
  setup:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Setup
      uses: ./.github/actions/setup
  eslint:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs: setup
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run ESLint
      uses: ./.github/actions/eslint
    continue-on-error: true
  prettier:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs: setup
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Prettier
      uses: ./.github/actions/prettier
  type-check:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs: setup
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Type Check
      uses: ./.github/actions/type-check
  unit-tests:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs:
    - eslint
    - prettier
    - type-check
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Unit Tests
      uses: ./.github/actions/unit-tests
    continue-on-error: true
  build:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs: unit-tests
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Build
      uses: ./.github/actions/build
  security-audit:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs: build
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run Security Audit
      uses: ./.github/actions/security-audit
  e2e-tests:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    if: github.event_name == 'workflow_dispatch' && params.RUN_E2E_TESTS
    needs: security-audit
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
    - name: Run E2E Tests
      uses: ./.github/actions/e2e-tests
  deploy-to-staging:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
    needs:
    - security-audit
    timeout-minutes: 60
    concurrency:
      group: deployment-deploy-to-staging
      cancel-in-progress: false
    steps:
    - uses: actions/checkout@v4
    - name: Run Deploy to Staging
      uses: ./.github/actions/deploy-to-staging
    if: always() && (needs.security-audit.result == 'success' || needs.security-audit.result == 'failure')
  pipeline-post:
    name: Pipeline Post Actions
    runs-on: ubuntu-latest
    needs:
    - setup
    - eslint
    - prettier
    - type-check
    - unit-tests
    - build
    - security-audit
    - e2e-tests
    - deploy-to-staging
    if: always()
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v4
    - name: Publish HTML (always) - MANUAL CONVERSION REQUIRED
      if: always()
      run: "\n# MANUAL CONVERSION REQUIRED: PublishHTML Plugin\n# Original Jenkins feature: publishHTML([\n                                allowMissing: true,\n                                alwaysLinkToLastBuild: true,\n                                keepAll: true,\n                                reportDir: 'reports',\n                                reportFiles: 'eslint.html',\n                                reportName: 'ESLint Report'\n                            ])\n# Action needed: Review Jenkins documentation and implement equivalent logic\n# TODO: Implement this functionality manually\n"
      shell: bash
    container:
      image: node:18-alpine
      options: -v /var/run/docker.sock:/var/run/docker.sock
